
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000070c  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080008b4  080008bc  000108bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080008b4  080008b4  000108bc  2**0
                  CONTENTS
  4 .ARM          00000000  080008b4  080008b4  000108bc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080008b4  080008bc  000108bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080008b4  080008b4  000108b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080008b8  080008b8  000108b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000108bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080008bc  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080008bc  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000108bc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000952  00000000  00000000  000108ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000212  00000000  00000000  0001123e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b8  00000000  00000000  00011450  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000090  00000000  00000000  00011508  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001445  00000000  00000000  00011598  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000dad  00000000  00000000  000129dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000056f7  00000000  00000000  0001378a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00018e81  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000224  00000000  00000000  00018ed4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	0800089c 	.word	0x0800089c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	0800089c 	.word	0x0800089c

080001e8 <delay>:

#define LOW 			0
#define BTN_PRESSED 	LOW

void delay(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	uint32_t time = 500000;
 80001ee:	4b08      	ldr	r3, [pc, #32]	; (8000210 <delay+0x28>)
 80001f0:	607b      	str	r3, [r7, #4]
	while(time)
 80001f2:	e002      	b.n	80001fa <delay+0x12>
		time--;
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3b01      	subs	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
	while(time)
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	2b00      	cmp	r3, #0
 80001fe:	d1f9      	bne.n	80001f4 <delay+0xc>
}
 8000200:	bf00      	nop
 8000202:	bf00      	nop
 8000204:	370c      	adds	r7, #12
 8000206:	46bd      	mov	sp, r7
 8000208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020c:	4770      	bx	lr
 800020e:	bf00      	nop
 8000210:	0007a120 	.word	0x0007a120

08000214 <main>:

int main()
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b086      	sub	sp, #24
 8000218:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed, GpioBtn;

	//button configuration
	GpioBtn.pGPIOx = GPIOB;
 800021a:	4b1c      	ldr	r3, [pc, #112]	; (800028c <main+0x78>)
 800021c:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber		= GPIO_PIN_NO_12;
 800021e:	230c      	movs	r3, #12
 8000220:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode			= GPIO_MODE_IN;
 8000222:	2300      	movs	r3, #0
 8000224:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed 		= GPIO_SPEED_FAST;
 8000226:	2302      	movs	r3, #2
 8000228:	71bb      	strb	r3, [r7, #6]
	//GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl  = GPIO_PU;
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl  = GPIO_NO_PUPD;
 800022a:	2300      	movs	r3, #0
 800022c:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOB, ENABLE);
 800022e:	2101      	movs	r1, #1
 8000230:	4816      	ldr	r0, [pc, #88]	; (800028c <main+0x78>)
 8000232:	f000 f859 	bl	80002e8 <GPIO_PeriClockControl>

	GPIO_Init(&GpioBtn);
 8000236:	463b      	mov	r3, r7
 8000238:	4618      	mov	r0, r3
 800023a:	f000 f93d 	bl	80004b8 <GPIO_Init>

	//led configuration
	GpioLed.pGPIOx = GPIOA;
 800023e:	4b14      	ldr	r3, [pc, #80]	; (8000290 <main+0x7c>)
 8000240:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber		= GPIO_PIN_NO_8;
 8000242:	2308      	movs	r3, #8
 8000244:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode			= GPIO_MODE_OUT;
 8000246:	2301      	movs	r3, #1
 8000248:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed 		= GPIO_SPEED_FAST;
 800024a:	2302      	movs	r3, #2
 800024c:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType		= GPIO_OP_TYPE_PP;
 800024e:	2300      	movs	r3, #0
 8000250:	753b      	strb	r3, [r7, #20]
	//GpioLed.GPIO_PinConfig.GPIO_PinOPType		= GPIO_OP_TYPE_OD;
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl  = GPIO_NO_PUPD;
 8000252:	2300      	movs	r3, #0
 8000254:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000256:	2101      	movs	r1, #1
 8000258:	480d      	ldr	r0, [pc, #52]	; (8000290 <main+0x7c>)
 800025a:	f000 f845 	bl	80002e8 <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 800025e:	f107 030c 	add.w	r3, r7, #12
 8000262:	4618      	mov	r0, r3
 8000264:	f000 f928 	bl	80004b8 <GPIO_Init>

	while(1){
		if(GPIO_ReadFromInputPin(GPIOB, GPIO_PIN_NO_12) == BTN_PRESSED){
 8000268:	210c      	movs	r1, #12
 800026a:	4808      	ldr	r0, [pc, #32]	; (800028c <main+0x78>)
 800026c:	f000 fac4 	bl	80007f8 <GPIO_ReadFromInputPin>
 8000270:	4603      	mov	r3, r0
 8000272:	f083 0301 	eor.w	r3, r3, #1
 8000276:	b2db      	uxtb	r3, r3
 8000278:	2b00      	cmp	r3, #0
 800027a:	d0f5      	beq.n	8000268 <main+0x54>
			GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_8);
 800027c:	2108      	movs	r1, #8
 800027e:	4804      	ldr	r0, [pc, #16]	; (8000290 <main+0x7c>)
 8000280:	f000 fad3 	bl	800082a <GPIO_ToggleOutputPin>
			delay();
 8000284:	f7ff ffb0 	bl	80001e8 <delay>
		if(GPIO_ReadFromInputPin(GPIOB, GPIO_PIN_NO_12) == BTN_PRESSED){
 8000288:	e7ee      	b.n	8000268 <main+0x54>
 800028a:	bf00      	nop
 800028c:	40020400 	.word	0x40020400
 8000290:	40020000 	.word	0x40020000

08000294 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000294:	480d      	ldr	r0, [pc, #52]	; (80002cc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000296:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000298:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800029c:	480c      	ldr	r0, [pc, #48]	; (80002d0 <LoopForever+0x6>)
  ldr r1, =_edata
 800029e:	490d      	ldr	r1, [pc, #52]	; (80002d4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002a0:	4a0d      	ldr	r2, [pc, #52]	; (80002d8 <LoopForever+0xe>)
  movs r3, #0
 80002a2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002a4:	e002      	b.n	80002ac <LoopCopyDataInit>

080002a6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002a6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002a8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002aa:	3304      	adds	r3, #4

080002ac <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002ac:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ae:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002b0:	d3f9      	bcc.n	80002a6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002b2:	4a0a      	ldr	r2, [pc, #40]	; (80002dc <LoopForever+0x12>)
  ldr r4, =_ebss
 80002b4:	4c0a      	ldr	r4, [pc, #40]	; (80002e0 <LoopForever+0x16>)
  movs r3, #0
 80002b6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002b8:	e001      	b.n	80002be <LoopFillZerobss>

080002ba <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ba:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002bc:	3204      	adds	r2, #4

080002be <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002be:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002c0:	d3fb      	bcc.n	80002ba <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002c2:	f000 fac7 	bl	8000854 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002c6:	f7ff ffa5 	bl	8000214 <main>

080002ca <LoopForever>:

LoopForever:
    b LoopForever
 80002ca:	e7fe      	b.n	80002ca <LoopForever>
  ldr   r0, =_estack
 80002cc:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002d0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002d4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002d8:	080008bc 	.word	0x080008bc
  ldr r2, =_sbss
 80002dc:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002e0:	2000001c 	.word	0x2000001c

080002e4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002e4:	e7fe      	b.n	80002e4 <ADC_IRQHandler>
	...

080002e8 <GPIO_PeriClockControl>:
 * @return            -  none
 *
 * @Note              -  none
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002e8:	b480      	push	{r7}
 80002ea:	b083      	sub	sp, #12
 80002ec:	af00      	add	r7, sp, #0
 80002ee:	6078      	str	r0, [r7, #4]
 80002f0:	460b      	mov	r3, r1
 80002f2:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE){
 80002f4:	78fb      	ldrb	r3, [r7, #3]
 80002f6:	2b01      	cmp	r3, #1
 80002f8:	d162      	bne.n	80003c0 <GPIO_PeriClockControl+0xd8>
		if(pGPIOx == GPIOA)
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	4a64      	ldr	r2, [pc, #400]	; (8000490 <GPIO_PeriClockControl+0x1a8>)
 80002fe:	4293      	cmp	r3, r2
 8000300:	d106      	bne.n	8000310 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 8000302:	4b64      	ldr	r3, [pc, #400]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 8000304:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000306:	4a63      	ldr	r2, [pc, #396]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 8000308:	f043 0301 	orr.w	r3, r3, #1
 800030c:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOH)
			GPIOH_PCLK_DI();
		else if(pGPIOx == GPIOI)
			GPIOI_PCLK_DI();
	}
}
 800030e:	e0b9      	b.n	8000484 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB)
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	4a61      	ldr	r2, [pc, #388]	; (8000498 <GPIO_PeriClockControl+0x1b0>)
 8000314:	4293      	cmp	r3, r2
 8000316:	d106      	bne.n	8000326 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000318:	4b5e      	ldr	r3, [pc, #376]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 800031a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031c:	4a5d      	ldr	r2, [pc, #372]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 800031e:	f043 0302 	orr.w	r3, r3, #2
 8000322:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000324:	e0ae      	b.n	8000484 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOC)
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	4a5c      	ldr	r2, [pc, #368]	; (800049c <GPIO_PeriClockControl+0x1b4>)
 800032a:	4293      	cmp	r3, r2
 800032c:	d106      	bne.n	800033c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800032e:	4b59      	ldr	r3, [pc, #356]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 8000330:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000332:	4a58      	ldr	r2, [pc, #352]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 8000334:	f043 0304 	orr.w	r3, r3, #4
 8000338:	6313      	str	r3, [r2, #48]	; 0x30
}
 800033a:	e0a3      	b.n	8000484 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOD)
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	4a58      	ldr	r2, [pc, #352]	; (80004a0 <GPIO_PeriClockControl+0x1b8>)
 8000340:	4293      	cmp	r3, r2
 8000342:	d106      	bne.n	8000352 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000344:	4b53      	ldr	r3, [pc, #332]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 8000346:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000348:	4a52      	ldr	r2, [pc, #328]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 800034a:	f043 0308 	orr.w	r3, r3, #8
 800034e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000350:	e098      	b.n	8000484 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOE)
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	4a53      	ldr	r2, [pc, #332]	; (80004a4 <GPIO_PeriClockControl+0x1bc>)
 8000356:	4293      	cmp	r3, r2
 8000358:	d106      	bne.n	8000368 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800035a:	4b4e      	ldr	r3, [pc, #312]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 800035c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035e:	4a4d      	ldr	r2, [pc, #308]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 8000360:	f043 0310 	orr.w	r3, r3, #16
 8000364:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000366:	e08d      	b.n	8000484 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOF)
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	4a4f      	ldr	r2, [pc, #316]	; (80004a8 <GPIO_PeriClockControl+0x1c0>)
 800036c:	4293      	cmp	r3, r2
 800036e:	d106      	bne.n	800037e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000370:	4b48      	ldr	r3, [pc, #288]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 8000372:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000374:	4a47      	ldr	r2, [pc, #284]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 8000376:	f043 0320 	orr.w	r3, r3, #32
 800037a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800037c:	e082      	b.n	8000484 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOG)
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	4a4a      	ldr	r2, [pc, #296]	; (80004ac <GPIO_PeriClockControl+0x1c4>)
 8000382:	4293      	cmp	r3, r2
 8000384:	d106      	bne.n	8000394 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000386:	4b43      	ldr	r3, [pc, #268]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 8000388:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038a:	4a42      	ldr	r2, [pc, #264]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 800038c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000390:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000392:	e077      	b.n	8000484 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOH)
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	4a46      	ldr	r2, [pc, #280]	; (80004b0 <GPIO_PeriClockControl+0x1c8>)
 8000398:	4293      	cmp	r3, r2
 800039a:	d106      	bne.n	80003aa <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 800039c:	4b3d      	ldr	r3, [pc, #244]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 800039e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a0:	4a3c      	ldr	r2, [pc, #240]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 80003a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a8:	e06c      	b.n	8000484 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOI)
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	4a41      	ldr	r2, [pc, #260]	; (80004b4 <GPIO_PeriClockControl+0x1cc>)
 80003ae:	4293      	cmp	r3, r2
 80003b0:	d168      	bne.n	8000484 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 80003b2:	4b38      	ldr	r3, [pc, #224]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 80003b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b6:	4a37      	ldr	r2, [pc, #220]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 80003b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003be:	e061      	b.n	8000484 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 80003c0:	687b      	ldr	r3, [r7, #4]
 80003c2:	4a33      	ldr	r2, [pc, #204]	; (8000490 <GPIO_PeriClockControl+0x1a8>)
 80003c4:	4293      	cmp	r3, r2
 80003c6:	d106      	bne.n	80003d6 <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 80003c8:	4b32      	ldr	r3, [pc, #200]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 80003ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003cc:	4a31      	ldr	r2, [pc, #196]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 80003ce:	f023 0301 	bic.w	r3, r3, #1
 80003d2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d4:	e056      	b.n	8000484 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB)
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	4a2f      	ldr	r2, [pc, #188]	; (8000498 <GPIO_PeriClockControl+0x1b0>)
 80003da:	4293      	cmp	r3, r2
 80003dc:	d106      	bne.n	80003ec <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 80003de:	4b2d      	ldr	r3, [pc, #180]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 80003e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e2:	4a2c      	ldr	r2, [pc, #176]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 80003e4:	f023 0302 	bic.w	r3, r3, #2
 80003e8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ea:	e04b      	b.n	8000484 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOC)
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	4a2b      	ldr	r2, [pc, #172]	; (800049c <GPIO_PeriClockControl+0x1b4>)
 80003f0:	4293      	cmp	r3, r2
 80003f2:	d106      	bne.n	8000402 <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 80003f4:	4b27      	ldr	r3, [pc, #156]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 80003f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f8:	4a26      	ldr	r2, [pc, #152]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 80003fa:	f023 0304 	bic.w	r3, r3, #4
 80003fe:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000400:	e040      	b.n	8000484 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOD)
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	4a26      	ldr	r2, [pc, #152]	; (80004a0 <GPIO_PeriClockControl+0x1b8>)
 8000406:	4293      	cmp	r3, r2
 8000408:	d106      	bne.n	8000418 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 800040a:	4b22      	ldr	r3, [pc, #136]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 800040c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800040e:	4a21      	ldr	r2, [pc, #132]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 8000410:	f023 0308 	bic.w	r3, r3, #8
 8000414:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000416:	e035      	b.n	8000484 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOE)
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	4a22      	ldr	r2, [pc, #136]	; (80004a4 <GPIO_PeriClockControl+0x1bc>)
 800041c:	4293      	cmp	r3, r2
 800041e:	d106      	bne.n	800042e <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 8000420:	4b1c      	ldr	r3, [pc, #112]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 8000422:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000424:	4a1b      	ldr	r2, [pc, #108]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 8000426:	f023 0310 	bic.w	r3, r3, #16
 800042a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800042c:	e02a      	b.n	8000484 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOF)
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	4a1d      	ldr	r2, [pc, #116]	; (80004a8 <GPIO_PeriClockControl+0x1c0>)
 8000432:	4293      	cmp	r3, r2
 8000434:	d106      	bne.n	8000444 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 8000436:	4b17      	ldr	r3, [pc, #92]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 8000438:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800043a:	4a16      	ldr	r2, [pc, #88]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 800043c:	f023 0320 	bic.w	r3, r3, #32
 8000440:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000442:	e01f      	b.n	8000484 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOG)
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	4a19      	ldr	r2, [pc, #100]	; (80004ac <GPIO_PeriClockControl+0x1c4>)
 8000448:	4293      	cmp	r3, r2
 800044a:	d106      	bne.n	800045a <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 800044c:	4b11      	ldr	r3, [pc, #68]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 800044e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000450:	4a10      	ldr	r2, [pc, #64]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 8000452:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000456:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000458:	e014      	b.n	8000484 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOH)
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	4a14      	ldr	r2, [pc, #80]	; (80004b0 <GPIO_PeriClockControl+0x1c8>)
 800045e:	4293      	cmp	r3, r2
 8000460:	d106      	bne.n	8000470 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 8000462:	4b0c      	ldr	r3, [pc, #48]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 8000464:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000466:	4a0b      	ldr	r2, [pc, #44]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 8000468:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800046c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800046e:	e009      	b.n	8000484 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOI)
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	4a10      	ldr	r2, [pc, #64]	; (80004b4 <GPIO_PeriClockControl+0x1cc>)
 8000474:	4293      	cmp	r3, r2
 8000476:	d105      	bne.n	8000484 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 8000478:	4b06      	ldr	r3, [pc, #24]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 800047a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800047c:	4a05      	ldr	r2, [pc, #20]	; (8000494 <GPIO_PeriClockControl+0x1ac>)
 800047e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000482:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000484:	bf00      	nop
 8000486:	370c      	adds	r7, #12
 8000488:	46bd      	mov	sp, r7
 800048a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800048e:	4770      	bx	lr
 8000490:	40020000 	.word	0x40020000
 8000494:	40023800 	.word	0x40023800
 8000498:	40020400 	.word	0x40020400
 800049c:	40020800 	.word	0x40020800
 80004a0:	40020c00 	.word	0x40020c00
 80004a4:	40021000 	.word	0x40021000
 80004a8:	40021400 	.word	0x40021400
 80004ac:	40021800 	.word	0x40021800
 80004b0:	40021c00 	.word	0x40021c00
 80004b4:	40022000 	.word	0x40022000

080004b8 <GPIO_Init>:

/*
 * Peripheral Init Deinit
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80004b8:	b480      	push	{r7}
 80004ba:	b087      	sub	sp, #28
 80004bc:	af00      	add	r7, sp, #0
 80004be:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0; //temporary register
 80004c0:	2300      	movs	r3, #0
 80004c2:	617b      	str	r3, [r7, #20]

	//1. configure the mode of gpio pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){	// non-interrupt mode
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	795b      	ldrb	r3, [r3, #5]
 80004c8:	2b03      	cmp	r3, #3
 80004ca:	d820      	bhi.n	800050e <GPIO_Init+0x56>
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	795b      	ldrb	r3, [r3, #5]
 80004d0:	461a      	mov	r2, r3
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	791b      	ldrb	r3, [r3, #4]
 80004d6:	005b      	lsls	r3, r3, #1
 80004d8:	fa02 f303 	lsl.w	r3, r2, r3
 80004dc:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));	//clearing
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	681b      	ldr	r3, [r3, #0]
 80004e2:	681a      	ldr	r2, [r3, #0]
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	791b      	ldrb	r3, [r3, #4]
 80004e8:	005b      	lsls	r3, r3, #1
 80004ea:	2103      	movs	r1, #3
 80004ec:	fa01 f303 	lsl.w	r3, r1, r3
 80004f0:	43db      	mvns	r3, r3
 80004f2:	4619      	mov	r1, r3
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	681b      	ldr	r3, [r3, #0]
 80004f8:	400a      	ands	r2, r1
 80004fa:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;		//setting
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	6819      	ldr	r1, [r3, #0]
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	681b      	ldr	r3, [r3, #0]
 8000506:	697a      	ldr	r2, [r7, #20]
 8000508:	430a      	orrs	r2, r1
 800050a:	601a      	str	r2, [r3, #0]
 800050c:	e0cb      	b.n	80006a6 <GPIO_Init+0x1ee>
	}
	else{ // this part will be coded later..  // interrupt mode

		//1.edge detection

		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	795b      	ldrb	r3, [r3, #5]
 8000512:	2b04      	cmp	r3, #4
 8000514:	d117      	bne.n	8000546 <GPIO_Init+0x8e>
			//configure the FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000516:	4b4b      	ldr	r3, [pc, #300]	; (8000644 <GPIO_Init+0x18c>)
 8000518:	68db      	ldr	r3, [r3, #12]
 800051a:	687a      	ldr	r2, [r7, #4]
 800051c:	7912      	ldrb	r2, [r2, #4]
 800051e:	4611      	mov	r1, r2
 8000520:	2201      	movs	r2, #1
 8000522:	408a      	lsls	r2, r1
 8000524:	4611      	mov	r1, r2
 8000526:	4a47      	ldr	r2, [pc, #284]	; (8000644 <GPIO_Init+0x18c>)
 8000528:	430b      	orrs	r3, r1
 800052a:	60d3      	str	r3, [r2, #12]
			//clear the corresponding RTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800052c:	4b45      	ldr	r3, [pc, #276]	; (8000644 <GPIO_Init+0x18c>)
 800052e:	689b      	ldr	r3, [r3, #8]
 8000530:	687a      	ldr	r2, [r7, #4]
 8000532:	7912      	ldrb	r2, [r2, #4]
 8000534:	4611      	mov	r1, r2
 8000536:	2201      	movs	r2, #1
 8000538:	408a      	lsls	r2, r1
 800053a:	43d2      	mvns	r2, r2
 800053c:	4611      	mov	r1, r2
 800053e:	4a41      	ldr	r2, [pc, #260]	; (8000644 <GPIO_Init+0x18c>)
 8000540:	400b      	ands	r3, r1
 8000542:	6093      	str	r3, [r2, #8]
 8000544:	e035      	b.n	80005b2 <GPIO_Init+0xfa>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	795b      	ldrb	r3, [r3, #5]
 800054a:	2b05      	cmp	r3, #5
 800054c:	d117      	bne.n	800057e <GPIO_Init+0xc6>
			//configure the RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800054e:	4b3d      	ldr	r3, [pc, #244]	; (8000644 <GPIO_Init+0x18c>)
 8000550:	689b      	ldr	r3, [r3, #8]
 8000552:	687a      	ldr	r2, [r7, #4]
 8000554:	7912      	ldrb	r2, [r2, #4]
 8000556:	4611      	mov	r1, r2
 8000558:	2201      	movs	r2, #1
 800055a:	408a      	lsls	r2, r1
 800055c:	4611      	mov	r1, r2
 800055e:	4a39      	ldr	r2, [pc, #228]	; (8000644 <GPIO_Init+0x18c>)
 8000560:	430b      	orrs	r3, r1
 8000562:	6093      	str	r3, [r2, #8]
			//clear the corresponding FTSR bit
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000564:	4b37      	ldr	r3, [pc, #220]	; (8000644 <GPIO_Init+0x18c>)
 8000566:	68db      	ldr	r3, [r3, #12]
 8000568:	687a      	ldr	r2, [r7, #4]
 800056a:	7912      	ldrb	r2, [r2, #4]
 800056c:	4611      	mov	r1, r2
 800056e:	2201      	movs	r2, #1
 8000570:	408a      	lsls	r2, r1
 8000572:	43d2      	mvns	r2, r2
 8000574:	4611      	mov	r1, r2
 8000576:	4a33      	ldr	r2, [pc, #204]	; (8000644 <GPIO_Init+0x18c>)
 8000578:	400b      	ands	r3, r1
 800057a:	60d3      	str	r3, [r2, #12]
 800057c:	e019      	b.n	80005b2 <GPIO_Init+0xfa>
		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	795b      	ldrb	r3, [r3, #5]
 8000582:	2b06      	cmp	r3, #6
 8000584:	d115      	bne.n	80005b2 <GPIO_Init+0xfa>
			//configure the RTSR and FTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000586:	4b2f      	ldr	r3, [pc, #188]	; (8000644 <GPIO_Init+0x18c>)
 8000588:	689b      	ldr	r3, [r3, #8]
 800058a:	687a      	ldr	r2, [r7, #4]
 800058c:	7912      	ldrb	r2, [r2, #4]
 800058e:	4611      	mov	r1, r2
 8000590:	2201      	movs	r2, #1
 8000592:	408a      	lsls	r2, r1
 8000594:	4611      	mov	r1, r2
 8000596:	4a2b      	ldr	r2, [pc, #172]	; (8000644 <GPIO_Init+0x18c>)
 8000598:	430b      	orrs	r3, r1
 800059a:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800059c:	4b29      	ldr	r3, [pc, #164]	; (8000644 <GPIO_Init+0x18c>)
 800059e:	68db      	ldr	r3, [r3, #12]
 80005a0:	687a      	ldr	r2, [r7, #4]
 80005a2:	7912      	ldrb	r2, [r2, #4]
 80005a4:	4611      	mov	r1, r2
 80005a6:	2201      	movs	r2, #1
 80005a8:	408a      	lsls	r2, r1
 80005aa:	4611      	mov	r1, r2
 80005ac:	4a25      	ldr	r2, [pc, #148]	; (8000644 <GPIO_Init+0x18c>)
 80005ae:	430b      	orrs	r3, r1
 80005b0:	60d3      	str	r3, [r2, #12]
		}

		//2. configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t t1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	791b      	ldrb	r3, [r3, #4]
 80005b6:	089b      	lsrs	r3, r3, #2
 80005b8:	74fb      	strb	r3, [r7, #19]
		uint8_t t2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	791b      	ldrb	r3, [r3, #4]
 80005be:	f003 0303 	and.w	r3, r3, #3
 80005c2:	74bb      	strb	r3, [r7, #18]

		uint8_t portcode = GPIO_BASE_ADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	4a1f      	ldr	r2, [pc, #124]	; (8000648 <GPIO_Init+0x190>)
 80005ca:	4293      	cmp	r3, r2
 80005cc:	d04e      	beq.n	800066c <GPIO_Init+0x1b4>
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	681b      	ldr	r3, [r3, #0]
 80005d2:	4a1e      	ldr	r2, [pc, #120]	; (800064c <GPIO_Init+0x194>)
 80005d4:	4293      	cmp	r3, r2
 80005d6:	d032      	beq.n	800063e <GPIO_Init+0x186>
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	4a1c      	ldr	r2, [pc, #112]	; (8000650 <GPIO_Init+0x198>)
 80005de:	4293      	cmp	r3, r2
 80005e0:	d02b      	beq.n	800063a <GPIO_Init+0x182>
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	681b      	ldr	r3, [r3, #0]
 80005e6:	4a1b      	ldr	r2, [pc, #108]	; (8000654 <GPIO_Init+0x19c>)
 80005e8:	4293      	cmp	r3, r2
 80005ea:	d024      	beq.n	8000636 <GPIO_Init+0x17e>
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	4a19      	ldr	r2, [pc, #100]	; (8000658 <GPIO_Init+0x1a0>)
 80005f2:	4293      	cmp	r3, r2
 80005f4:	d01d      	beq.n	8000632 <GPIO_Init+0x17a>
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	681b      	ldr	r3, [r3, #0]
 80005fa:	4a18      	ldr	r2, [pc, #96]	; (800065c <GPIO_Init+0x1a4>)
 80005fc:	4293      	cmp	r3, r2
 80005fe:	d016      	beq.n	800062e <GPIO_Init+0x176>
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	681b      	ldr	r3, [r3, #0]
 8000604:	4a16      	ldr	r2, [pc, #88]	; (8000660 <GPIO_Init+0x1a8>)
 8000606:	4293      	cmp	r3, r2
 8000608:	d00f      	beq.n	800062a <GPIO_Init+0x172>
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	681b      	ldr	r3, [r3, #0]
 800060e:	4a15      	ldr	r2, [pc, #84]	; (8000664 <GPIO_Init+0x1ac>)
 8000610:	4293      	cmp	r3, r2
 8000612:	d008      	beq.n	8000626 <GPIO_Init+0x16e>
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	681b      	ldr	r3, [r3, #0]
 8000618:	4a13      	ldr	r2, [pc, #76]	; (8000668 <GPIO_Init+0x1b0>)
 800061a:	4293      	cmp	r3, r2
 800061c:	d101      	bne.n	8000622 <GPIO_Init+0x16a>
 800061e:	2308      	movs	r3, #8
 8000620:	e025      	b.n	800066e <GPIO_Init+0x1b6>
 8000622:	2300      	movs	r3, #0
 8000624:	e023      	b.n	800066e <GPIO_Init+0x1b6>
 8000626:	2307      	movs	r3, #7
 8000628:	e021      	b.n	800066e <GPIO_Init+0x1b6>
 800062a:	2306      	movs	r3, #6
 800062c:	e01f      	b.n	800066e <GPIO_Init+0x1b6>
 800062e:	2305      	movs	r3, #5
 8000630:	e01d      	b.n	800066e <GPIO_Init+0x1b6>
 8000632:	2304      	movs	r3, #4
 8000634:	e01b      	b.n	800066e <GPIO_Init+0x1b6>
 8000636:	2303      	movs	r3, #3
 8000638:	e019      	b.n	800066e <GPIO_Init+0x1b6>
 800063a:	2302      	movs	r3, #2
 800063c:	e017      	b.n	800066e <GPIO_Init+0x1b6>
 800063e:	2301      	movs	r3, #1
 8000640:	e015      	b.n	800066e <GPIO_Init+0x1b6>
 8000642:	bf00      	nop
 8000644:	40013c00 	.word	0x40013c00
 8000648:	40020000 	.word	0x40020000
 800064c:	40020400 	.word	0x40020400
 8000650:	40020800 	.word	0x40020800
 8000654:	40020c00 	.word	0x40020c00
 8000658:	40021000 	.word	0x40021000
 800065c:	40021400 	.word	0x40021400
 8000660:	40021800 	.word	0x40021800
 8000664:	40021c00 	.word	0x40021c00
 8000668:	40022000 	.word	0x40022000
 800066c:	2300      	movs	r3, #0
 800066e:	747b      	strb	r3, [r7, #17]

		SYSCFG_PCLK_EN();
 8000670:	4b5e      	ldr	r3, [pc, #376]	; (80007ec <GPIO_Init+0x334>)
 8000672:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000674:	4a5d      	ldr	r2, [pc, #372]	; (80007ec <GPIO_Init+0x334>)
 8000676:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800067a:	6453      	str	r3, [r2, #68]	; 0x44

		SYSCFG->EXTICR[t1] = portcode << (4 * t2);
 800067c:	7c7a      	ldrb	r2, [r7, #17]
 800067e:	7cbb      	ldrb	r3, [r7, #18]
 8000680:	009b      	lsls	r3, r3, #2
 8000682:	fa02 f103 	lsl.w	r1, r2, r3
 8000686:	4a5a      	ldr	r2, [pc, #360]	; (80007f0 <GPIO_Init+0x338>)
 8000688:	7cfb      	ldrb	r3, [r7, #19]
 800068a:	3302      	adds	r3, #2
 800068c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3. enable the exti interrupt delivery using IMR
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000690:	4b58      	ldr	r3, [pc, #352]	; (80007f4 <GPIO_Init+0x33c>)
 8000692:	681b      	ldr	r3, [r3, #0]
 8000694:	687a      	ldr	r2, [r7, #4]
 8000696:	7912      	ldrb	r2, [r2, #4]
 8000698:	4611      	mov	r1, r2
 800069a:	2201      	movs	r2, #1
 800069c:	408a      	lsls	r2, r1
 800069e:	4611      	mov	r1, r2
 80006a0:	4a54      	ldr	r2, [pc, #336]	; (80007f4 <GPIO_Init+0x33c>)
 80006a2:	430b      	orrs	r3, r1
 80006a4:	6013      	str	r3, [r2, #0]

	}

	temp = 0;
 80006a6:	2300      	movs	r3, #0
 80006a8:	617b      	str	r3, [r7, #20]

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	799b      	ldrb	r3, [r3, #6]
 80006ae:	461a      	mov	r2, r3
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	791b      	ldrb	r3, [r3, #4]
 80006b4:	005b      	lsls	r3, r3, #1
 80006b6:	fa02 f303 	lsl.w	r3, r2, r3
 80006ba:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	689a      	ldr	r2, [r3, #8]
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	791b      	ldrb	r3, [r3, #4]
 80006c6:	005b      	lsls	r3, r3, #1
 80006c8:	2103      	movs	r1, #3
 80006ca:	fa01 f303 	lsl.w	r3, r1, r3
 80006ce:	43db      	mvns	r3, r3
 80006d0:	4619      	mov	r1, r3
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	681b      	ldr	r3, [r3, #0]
 80006d6:	400a      	ands	r2, r1
 80006d8:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80006da:	687b      	ldr	r3, [r7, #4]
 80006dc:	681b      	ldr	r3, [r3, #0]
 80006de:	6899      	ldr	r1, [r3, #8]
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	681b      	ldr	r3, [r3, #0]
 80006e4:	697a      	ldr	r2, [r7, #20]
 80006e6:	430a      	orrs	r2, r1
 80006e8:	609a      	str	r2, [r3, #8]

	temp = 0;
 80006ea:	2300      	movs	r3, #0
 80006ec:	617b      	str	r3, [r7, #20]

	//3. configure the pulluppulldown settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	79db      	ldrb	r3, [r3, #7]
 80006f2:	461a      	mov	r2, r3
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	791b      	ldrb	r3, [r3, #4]
 80006f8:	005b      	lsls	r3, r3, #1
 80006fa:	fa02 f303 	lsl.w	r3, r2, r3
 80006fe:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000700:	687b      	ldr	r3, [r7, #4]
 8000702:	681b      	ldr	r3, [r3, #0]
 8000704:	68da      	ldr	r2, [r3, #12]
 8000706:	687b      	ldr	r3, [r7, #4]
 8000708:	791b      	ldrb	r3, [r3, #4]
 800070a:	005b      	lsls	r3, r3, #1
 800070c:	2103      	movs	r1, #3
 800070e:	fa01 f303 	lsl.w	r3, r1, r3
 8000712:	43db      	mvns	r3, r3
 8000714:	4619      	mov	r1, r3
 8000716:	687b      	ldr	r3, [r7, #4]
 8000718:	681b      	ldr	r3, [r3, #0]
 800071a:	400a      	ands	r2, r1
 800071c:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	681b      	ldr	r3, [r3, #0]
 8000722:	68d9      	ldr	r1, [r3, #12]
 8000724:	687b      	ldr	r3, [r7, #4]
 8000726:	681b      	ldr	r3, [r3, #0]
 8000728:	697a      	ldr	r2, [r7, #20]
 800072a:	430a      	orrs	r2, r1
 800072c:	60da      	str	r2, [r3, #12]

	temp = 0;
 800072e:	2300      	movs	r3, #0
 8000730:	617b      	str	r3, [r7, #20]

	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000732:	687b      	ldr	r3, [r7, #4]
 8000734:	7a1b      	ldrb	r3, [r3, #8]
 8000736:	461a      	mov	r2, r3
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	791b      	ldrb	r3, [r3, #4]
 800073c:	fa02 f303 	lsl.w	r3, r2, r3
 8000740:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000742:	687b      	ldr	r3, [r7, #4]
 8000744:	681b      	ldr	r3, [r3, #0]
 8000746:	685a      	ldr	r2, [r3, #4]
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	791b      	ldrb	r3, [r3, #4]
 800074c:	4619      	mov	r1, r3
 800074e:	2301      	movs	r3, #1
 8000750:	408b      	lsls	r3, r1
 8000752:	43db      	mvns	r3, r3
 8000754:	4619      	mov	r1, r3
 8000756:	687b      	ldr	r3, [r7, #4]
 8000758:	681b      	ldr	r3, [r3, #0]
 800075a:	400a      	ands	r2, r1
 800075c:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800075e:	687b      	ldr	r3, [r7, #4]
 8000760:	681b      	ldr	r3, [r3, #0]
 8000762:	6859      	ldr	r1, [r3, #4]
 8000764:	687b      	ldr	r3, [r7, #4]
 8000766:	681b      	ldr	r3, [r3, #0]
 8000768:	697a      	ldr	r2, [r7, #20]
 800076a:	430a      	orrs	r2, r1
 800076c:	605a      	str	r2, [r3, #4]

	temp = 0;
 800076e:	2300      	movs	r3, #0
 8000770:	617b      	str	r3, [r7, #20]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 8000772:	687b      	ldr	r3, [r7, #4]
 8000774:	795b      	ldrb	r3, [r3, #5]
 8000776:	2b02      	cmp	r3, #2
 8000778:	d131      	bne.n	80007de <GPIO_Init+0x326>
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800077a:	687b      	ldr	r3, [r7, #4]
 800077c:	791b      	ldrb	r3, [r3, #4]
 800077e:	08db      	lsrs	r3, r3, #3
 8000780:	743b      	strb	r3, [r7, #16]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000782:	687b      	ldr	r3, [r7, #4]
 8000784:	791b      	ldrb	r3, [r3, #4]
 8000786:	f003 0307 	and.w	r3, r3, #7
 800078a:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xf << (4 * temp2));
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	681b      	ldr	r3, [r3, #0]
 8000790:	7c3a      	ldrb	r2, [r7, #16]
 8000792:	3208      	adds	r2, #8
 8000794:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000798:	7bfb      	ldrb	r3, [r7, #15]
 800079a:	009b      	lsls	r3, r3, #2
 800079c:	220f      	movs	r2, #15
 800079e:	fa02 f303 	lsl.w	r3, r2, r3
 80007a2:	43db      	mvns	r3, r3
 80007a4:	4618      	mov	r0, r3
 80007a6:	687b      	ldr	r3, [r7, #4]
 80007a8:	681b      	ldr	r3, [r3, #0]
 80007aa:	7c3a      	ldrb	r2, [r7, #16]
 80007ac:	4001      	ands	r1, r0
 80007ae:	3208      	adds	r2, #8
 80007b0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2);
 80007b4:	687b      	ldr	r3, [r7, #4]
 80007b6:	681b      	ldr	r3, [r3, #0]
 80007b8:	7c3a      	ldrb	r2, [r7, #16]
 80007ba:	3208      	adds	r2, #8
 80007bc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80007c0:	687b      	ldr	r3, [r7, #4]
 80007c2:	7a5b      	ldrb	r3, [r3, #9]
 80007c4:	461a      	mov	r2, r3
 80007c6:	7bfb      	ldrb	r3, [r7, #15]
 80007c8:	009b      	lsls	r3, r3, #2
 80007ca:	fa02 f303 	lsl.w	r3, r2, r3
 80007ce:	4618      	mov	r0, r3
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	681b      	ldr	r3, [r3, #0]
 80007d4:	7c3a      	ldrb	r2, [r7, #16]
 80007d6:	4301      	orrs	r1, r0
 80007d8:	3208      	adds	r2, #8
 80007da:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80007de:	bf00      	nop
 80007e0:	371c      	adds	r7, #28
 80007e2:	46bd      	mov	sp, r7
 80007e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007e8:	4770      	bx	lr
 80007ea:	bf00      	nop
 80007ec:	40023800 	.word	0x40023800
 80007f0:	40013800 	.word	0x40013800
 80007f4:	40013c00 	.word	0x40013c00

080007f8 <GPIO_ReadFromInputPin>:

/*
 * Data read write
 */
bool GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80007f8:	b480      	push	{r7}
 80007fa:	b085      	sub	sp, #20
 80007fc:	af00      	add	r7, sp, #0
 80007fe:	6078      	str	r0, [r7, #4]
 8000800:	460b      	mov	r3, r1
 8000802:	70fb      	strb	r3, [r7, #3]
	bool value = (bool)((pGPIOx->IDR >> PinNumber) & 0x00000001); //to lsb
 8000804:	687b      	ldr	r3, [r7, #4]
 8000806:	691a      	ldr	r2, [r3, #16]
 8000808:	78fb      	ldrb	r3, [r7, #3]
 800080a:	fa22 f303 	lsr.w	r3, r2, r3
 800080e:	f003 0301 	and.w	r3, r3, #1
 8000812:	2b00      	cmp	r3, #0
 8000814:	bf14      	ite	ne
 8000816:	2301      	movne	r3, #1
 8000818:	2300      	moveq	r3, #0
 800081a:	73fb      	strb	r3, [r7, #15]

	return value;
 800081c:	7bfb      	ldrb	r3, [r7, #15]
}
 800081e:	4618      	mov	r0, r3
 8000820:	3714      	adds	r7, #20
 8000822:	46bd      	mov	sp, r7
 8000824:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000828:	4770      	bx	lr

0800082a <GPIO_ToggleOutputPin>:
{
	pGPIOx->ODR = Value;
}

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800082a:	b480      	push	{r7}
 800082c:	b083      	sub	sp, #12
 800082e:	af00      	add	r7, sp, #0
 8000830:	6078      	str	r0, [r7, #4]
 8000832:	460b      	mov	r3, r1
 8000834:	70fb      	strb	r3, [r7, #3]
	if(value)
		pGPIOx->ODR &= ~(0x1 << PinNumber);
	else
		pGPIOx->ODR |= (0x1 << PinNumber);*/

	pGPIOx->ODR ^= (0x1 << PinNumber);
 8000836:	687b      	ldr	r3, [r7, #4]
 8000838:	695b      	ldr	r3, [r3, #20]
 800083a:	78fa      	ldrb	r2, [r7, #3]
 800083c:	2101      	movs	r1, #1
 800083e:	fa01 f202 	lsl.w	r2, r1, r2
 8000842:	405a      	eors	r2, r3
 8000844:	687b      	ldr	r3, [r7, #4]
 8000846:	615a      	str	r2, [r3, #20]
}
 8000848:	bf00      	nop
 800084a:	370c      	adds	r7, #12
 800084c:	46bd      	mov	sp, r7
 800084e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000852:	4770      	bx	lr

08000854 <__libc_init_array>:
 8000854:	b570      	push	{r4, r5, r6, lr}
 8000856:	4d0d      	ldr	r5, [pc, #52]	; (800088c <__libc_init_array+0x38>)
 8000858:	4c0d      	ldr	r4, [pc, #52]	; (8000890 <__libc_init_array+0x3c>)
 800085a:	1b64      	subs	r4, r4, r5
 800085c:	10a4      	asrs	r4, r4, #2
 800085e:	2600      	movs	r6, #0
 8000860:	42a6      	cmp	r6, r4
 8000862:	d109      	bne.n	8000878 <__libc_init_array+0x24>
 8000864:	4d0b      	ldr	r5, [pc, #44]	; (8000894 <__libc_init_array+0x40>)
 8000866:	4c0c      	ldr	r4, [pc, #48]	; (8000898 <__libc_init_array+0x44>)
 8000868:	f000 f818 	bl	800089c <_init>
 800086c:	1b64      	subs	r4, r4, r5
 800086e:	10a4      	asrs	r4, r4, #2
 8000870:	2600      	movs	r6, #0
 8000872:	42a6      	cmp	r6, r4
 8000874:	d105      	bne.n	8000882 <__libc_init_array+0x2e>
 8000876:	bd70      	pop	{r4, r5, r6, pc}
 8000878:	f855 3b04 	ldr.w	r3, [r5], #4
 800087c:	4798      	blx	r3
 800087e:	3601      	adds	r6, #1
 8000880:	e7ee      	b.n	8000860 <__libc_init_array+0xc>
 8000882:	f855 3b04 	ldr.w	r3, [r5], #4
 8000886:	4798      	blx	r3
 8000888:	3601      	adds	r6, #1
 800088a:	e7f2      	b.n	8000872 <__libc_init_array+0x1e>
 800088c:	080008b4 	.word	0x080008b4
 8000890:	080008b4 	.word	0x080008b4
 8000894:	080008b4 	.word	0x080008b4
 8000898:	080008b8 	.word	0x080008b8

0800089c <_init>:
 800089c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800089e:	bf00      	nop
 80008a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008a2:	bc08      	pop	{r3}
 80008a4:	469e      	mov	lr, r3
 80008a6:	4770      	bx	lr

080008a8 <_fini>:
 80008a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008aa:	bf00      	nop
 80008ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008ae:	bc08      	pop	{r3}
 80008b0:	469e      	mov	lr, r3
 80008b2:	4770      	bx	lr
